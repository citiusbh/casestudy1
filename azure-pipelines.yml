# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# Define triggers for the pipeline. In this case, the pipeline won't be triggered automatically but manually.

trigger:
  - none

# Define the resources used by the pipeline. In this case, it refers to the current repository.
resources:
  - repo: self

# Define variables to be used throughout the pipeline.
variables:
  tag: "$(Build.BuildId)" # Define a variable named 'tag' with the value of the BuildId.

# Define stages for the pipeline.
stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build # Define a job within the 'Build' stage.
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Maven@4 # Use the Maven task to build a Java project.
            inputs:
              mavenPomFile: "pom.xml"
              goals: "install"
              publishJUnitResults: true
              testResultsFiles: "**/surefire-reports/TEST-*.xml"
              javaHomeOption: "JDKVersion"
              mavenVersionOption: "Default"
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
          - task: PublishPipelineArtifact@1 # Publish the JAR artifact generated by Maven.
            inputs:
              targetPath: "$(System.DefaultWorkingDirectory)"
              artifact: "jar"
              publishLocation: "pipeline"

  - stage: BuildAndPushDockerImage # Define another stage to build and push Docker image.
    jobs:
      - job: BuildDockerImage
        pool:
          name: "cs1agentpool" # Use a specific agent pool for this job.
        steps:
          - task: DockerInstaller@0
            inputs:
              dockerVersion: "17.09.0-ce"
          - task: Docker@2 # Use Docker task to build and push Docker image.
            inputs:
              containerRegistry: "acr-service-conn" # Use the specified container registry.
              repository: "cs1acr" # Specify the repository name for the Docker image.
              command: "buildAndPush" # Execute the 'buildAndPush' command.
              Dockerfile: "Dockerfile" # Specify the Dockerfile to use for building the image.

